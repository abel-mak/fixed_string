"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[234],{2789:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return m},default:function(){return x},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return b}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),s=n(1848),o=n(8330),c=n(6354),d=n(6213),p=["components"],u={sidebar_position:10,sidebar_label:"begin & cbegin"},m="fixstr::basic_fixed_string::begin` <br/> `fixstr::basic_fixed_string::cbegin",l={unversionedId:"api/member-functions/begin",id:"api/member-functions/begin",isDocsHomePage:!1,title:"fixstr::basic_fixed_string::begin` <br/> `fixstr::basic_fixed_string::cbegin",description:"Returns an iterator to the first character of the fixed string.",source:"@site/docs/api/member-functions/begin.mdx",sourceDirName:"api/member-functions",slug:"/api/member-functions/begin",permalink:"/fixed_string/docs/api/member-functions/begin",editUrl:"https://github.com/unterumarmung/fixed_string/edit/add-documentation/documentation/docs/api/member-functions/begin.mdx",version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"begin & cbegin"},sidebar:"tutorialSidebar",previous:{title:"max_size",permalink:"/fixed_string/docs/api/member-functions/max_size"},next:{title:"end & cend",permalink:"/fixed_string/docs/api/member-functions/end"}},b=[{value:"Parameters",id:"parameters",children:[]},{value:"Return value",id:"return-value",children:[]},{value:"Complexity",id:"complexity",children:[]},{value:"Example",id:"example",children:[]}],g={toc:b};function x(e){var t=e.components,u=(0,r.Z)(e,p);return(0,a.kt)("wrapper",(0,i.Z)({},g,u,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fixstrbasic_fixed_stringbegin--fixstrbasic_fixed_stringcbegin"},(0,a.kt)("inlineCode",{parentName:"h1"},"fixstr::basic_fixed_string::begin")," ",(0,a.kt)("br",null)," ",(0,a.kt)("inlineCode",{parentName:"h1"},"fixstr::basic_fixed_string::cbegin")),(0,a.kt)(o.Z,{mdxType:"CppOverloadList"},(0,a.kt)(s.Z,{num:1,code:"[[nodiscard]] constexpr iterator begin() noexcept;",mdxType:"CppOverload"}),(0,a.kt)(s.Z,{num:2,code:"[[nodiscard]] constexpr const_iterator begin() const noexcept;",mdxType:"CppOverload"}),(0,a.kt)(s.Z,{num:3,code:"[[nodiscard]] constexpr const_iterator cbegin() const noexcept;",mdxType:"CppOverload"})),(0,a.kt)("p",null,"Returns an iterator to the first character of the fixed string."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"begin()")," returns a ",(0,a.kt)("em",{parentName:"p"},"mutable")," or ",(0,a.kt)("em",{parentName:"p"},"constant")," iterator, depending on the constness of ",(0,a.kt)("inlineCode",{parentName:"p"},"*this"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"cbegin()")," always returns a ",(0,a.kt)("em",{parentName:"p"},"constant")," iterator. It is equivalent to ",(0,a.kt)("inlineCode",{parentName:"p"},"std::as_const(*this).begin()")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Image explaining iterators",src:n(9680).Z})),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"(none)"),(0,a.kt)("h2",{id:"return-value"},"Return value"),(0,a.kt)("p",null,"Iterator to the first character."),(0,a.kt)("h2",{id:"complexity"},"Complexity"),(0,a.kt)("p",null,"Constant."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)(c.Z,{link:"https://godbolt.org/z/9PWsxqK6h",mdxType:"LinkButton"},"Run this code!"),(0,a.kt)(d.Z,{className:"language-cpp",mdxType:"CodeBlock"},"#include <fixed_string.hpp>\n#include <iostream>\n#include <string>\n#include <utility>\n\nint main()\n{\n    fixstr::fixed_string s = \"Exemplar\";\n    *s.begin() = 'e';\n    std::cout << s << '\\n';\n\n    auto i1 = s.cbegin();\n    std::cout << *i1 << '\\n';\n    // *i1 = 'E'; // error: i1 is a constant iterator\n\n    auto i2 = std::as_const(s).begin();\n    std::cout << *i2 << '\\n';\n    // *i2 = 'E'; // error: i2 is a constant iterator\n}"),"Output:",(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"exemplar\ne\ne\n")))}x.isMDXComponent=!0},9680:function(e,t,n){t.Z=n.p+"assets/images/range-begin-end-6db6a03ba59c3dbd95a684efee92c756.png"}}]);