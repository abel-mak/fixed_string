"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[869],{6300:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return f}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),s=n(1848),a=n(8330),c=n(6354),u=n(6213),l=["components"],d={sidebar_position:1,sidebar_label:"Constructors"},p="Constructors",m={unversionedId:"api/member-functions/constructors",id:"api/member-functions/constructors",isDocsHomePage:!1,title:"Constructors",description:"1. Default constructor. Initializes the whole string with zeros.",source:"@site/docs/api/member-functions/constructors.mdx",sourceDirName:"api/member-functions",slug:"/api/member-functions/constructors",permalink:"/fixed_string/docs/api/member-functions/constructors",editUrl:"https://github.com/unterumarmung/fixed_string/edit/add-documentation/documentation/docs/api/member-functions/constructors.mdx",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Constructors"},sidebar:"tutorialSidebar",previous:{title:"basic_fixed_string",permalink:"/fixed_string/docs/api/basic_fixed_string"},next:{title:"operator=",permalink:"/fixed_string/docs/api/member-functions/operator-assign"}},f=[{value:"Parameters",id:"parameters",children:[]},{value:"Complexity",id:"complexity",children:[]},{value:"Example",id:"example",children:[]}],x={toc:f};function k(t){var e=t.components,n=(0,i.Z)(t,l);return(0,o.kt)("wrapper",(0,r.Z)({},x,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"constructors"},"Constructors"),(0,o.kt)(a.Z,{mdxType:"CppOverloadList"},(0,o.kt)(s.Z,{num:1,code:"constexpr basic_fixed_string() noexcept;",mdxType:"CppOverload"}),(0,o.kt)(s.Z,{num:2,code:"constexpr basic_fixed_string(const value_type (&array)[N + 1]) noexcept;",mdxType:"CppOverload"})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Default constructor. Initializes the whole string with zeros."),(0,o.kt)("li",{parentName:"ol"},"Constructs a ",(0,o.kt)("inlineCode",{parentName:"li"},"basic_fixed_string")," from a ",(0,o.kt)("inlineCode",{parentName:"li"},"const char")," array.")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"array")," - reference to an array of characters to use as source to initialize the fixed string with")),(0,o.kt)("h2",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,"1-2. Linear in ",(0,o.kt)("inlineCode",{parentName:"p"},"N")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(c.Z,{link:"https://godbolt.org/z/eexMca375",mdxType:"LinkButton"},"Run this code!"),(0,o.kt)(u.Z,{className:"language-cpp",mdxType:"CodeBlock"},'#include <fixed_string.hpp>\n#include <iostream>\n\nint main()\n{\n    fixstr::fixed_string str = "Hello, World!";\n    std::cout << str;\n}'),"Output:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Hello, World!\n")))}k.isMDXComponent=!0}}]);