"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[556],{8469:function(e,t,r){r.r(t),r.d(t,{contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return f}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=r(1848),s=r(8330),p=r(6354),c=r(6213),d=["components"],l={sidebar_position:1,sidebar_label:"operator="},u="fixstr::basic_fixed_string::operator=",m={unversionedId:"api/member-functions/operator-assign",id:"api/member-functions/operator-assign",isDocsHomePage:!1,title:"fixstr::basic_fixed_string::operator=",description:"Replaces the contents with a copy of array.",source:"@site/docs/api/member-functions/operator-assign.mdx",sourceDirName:"api/member-functions",slug:"/api/member-functions/operator-assign",permalink:"/fixed_string/docs/api/member-functions/operator-assign",editUrl:"https://github.com/unterumarmung/fixed_string/edit/add-documentation/documentation/docs/api/member-functions/operator-assign.mdx",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"operator="},sidebar:"tutorialSidebar",previous:{title:"Constructors",permalink:"/fixed_string/docs/api/member-functions/constructors"},next:{title:"operator[]",permalink:"/fixed_string/docs/api/member-functions/operator-at"}},f=[{value:"Parameters",id:"parameters",children:[]},{value:"Complexity",id:"complexity",children:[]},{value:"Example",id:"example",children:[]}],x={toc:f};function k(e){var t=e.components,r=(0,i.Z)(e,d);return(0,o.kt)("wrapper",(0,n.Z)({},x,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fixstrbasic_fixed_stringoperator"},(0,o.kt)("inlineCode",{parentName:"h1"},"fixstr::basic_fixed_string::operator=")),(0,o.kt)(s.Z,{mdxType:"CppOverloadList"},(0,o.kt)(a.Z,{num:1,code:"constexpr basic_fixed_string& operator=(const value_type (&array)[N + 1]) noexcept;",mdxType:"CppOverload"})),(0,o.kt)("p",null,"Replaces the contents with a copy of ",(0,o.kt)("inlineCode",{parentName:"p"},"array"),"."),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"array")," - reference to an array of characters to use as source to initialize the fixed string with")),(0,o.kt)("h2",{id:"complexity"},"Complexity"),(0,o.kt)("p",null,"Linear in ",(0,o.kt)("inlineCode",{parentName:"p"},"N")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(p.Z,{link:"https://godbolt.org/z/da78q9xc8",mdxType:"LinkButton"},"Run this code!"),(0,o.kt)(c.Z,{className:"language-cpp",mdxType:"CodeBlock"},'#include <fixed_string.hpp>\n#include <iostream>\n\nint main()\n{\n    fixstr::fixed_string<5> hello, world;\n    hello = "Hello";\n    world = "World";\n    std::cout << hello << ", " << world;\n}'),"Output:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Hello, World!\n")))}k.isMDXComponent=!0}}]);